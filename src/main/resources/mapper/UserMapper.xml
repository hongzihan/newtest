<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.st.newtest.Mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.st.newtest.Entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="corepwd" jdbcType="INTEGER" property="corepwd" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <collection property="roleList" ofType="com.st.newtest.Entity.Role">
      <id column="roleid" property="id"></id>
      <result column="rolename" property="rolename"></result>
      <result column="roledesc" property="roledesc"></result>
      <collection property="permissionsList" ofType="com.st.newtest.Entity.Permissions">
        <id column="permissionid" property="id"></id>
        <result column="modelname" property="modelname"></result>
        <result column="permission" property="permission"></result>
      </collection>
    </collection>
  </resultMap>
  <select id="findUserByName" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select u.id id, username, password, corepwd, nickname, r.id roleid ,rolename ,roledesc , p.id permissionid ,modelname,permission from user u
    INNER JOIN user_role ur on u.id = ur.uid
    INNER JOIN role r ON ur.rid = r.id
    INNER JOIN role_permission rp ON r.id = rp.rid
    INNER JOIN permission p on rp.pid = p.id
    where u.username = #{name}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.st.newtest.Entity.User">
    insert into user (id, username, `password`, 
      email, corepwd)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{corepwd,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.st.newtest.Entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      corepwd = #{corepwd,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, `password`, email, corepwd
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, `password`, email, corepwd
    from user
  </select>
  <select id="selectByUserAndPwd" parameterType="java.util.Map" resultMap="BaseResultMap">
    select id, username, `password`, email, corepwd
    from user
    where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, `password`, email, corepwd
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>

</mapper>